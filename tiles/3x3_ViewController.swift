//
//  3x3_ViewController.swift
//  tiles
//
//  Created by Alexey Makarov on 19.07.2021.
//

import UIKit

class _x3_ViewController: UIViewController {

    var x = 0 // —Å—á–µ—Ç—á–∏–∫
    var y: [String] = [] // –º–∞—Å—Å–∏–≤ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    var equal: [UIButton] = [] //–º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –∫–æ—Ç–æ—Ä—ã–µ –æ–∫—Ä–∞—à–∏–≤–∞—é—Ç —Ü–≤–µ—Ç –∫–Ω–æ–ø–æ–∫, –ø—Ä–∏ —Ä–∞–∑–Ω–æ–º —Ü–≤–µ—Ç–µ —Å–∏–º–≤–æ–ª–æ–≤(–∫–∞—Ä—Ç–∏–Ω–æ–∫)
    var sec = 0.3
    var timer = Timer()
   
   
    //–≤–º–µ—Å—Ç–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –ª—ç–π–±–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–≤–æ–¥—è—Ç —ç–º–æ–¥–∑–∏
    
    @IBOutlet weak var label1: UILabel!
    @IBOutlet weak var label2: UILabel!
    @IBOutlet weak var label3: UILabel!
    
    @IBOutlet weak var label4: UILabel!
    @IBOutlet weak var label5: UILabel!
    @IBOutlet weak var label6: UILabel!
    
    @IBOutlet weak var label7: UILabel!
    @IBOutlet weak var label8: UILabel!
    @IBOutlet weak var label9: UILabel!
    
    //–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã
    @IBOutlet weak var resultLabel: UILabel!
    
    //–∞—É—Ç–ª–µ—Ç—ã –∫–Ω–æ–ø–æ–∫
    @IBOutlet weak var button1: UIButton!
    @IBOutlet weak var button2: UIButton!
    @IBOutlet weak var button3: UIButton!
    
    @IBOutlet weak var button4: UIButton!
    @IBOutlet weak var button5: UIButton!
    @IBOutlet weak var button6: UIButton!
    
    @IBOutlet weak var button7: UIButton!
    @IBOutlet weak var button8: UIButton!
    @IBOutlet weak var button9: UIButton!
    
    
    //–æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫(—Å–∏–º–≤–æ–ª–æ–≤)
    @IBAction func buttonTile(sender: UIButton) {

        switch sender {
        case button1:
            y += [label1.text!]
            equal += [button1]
            x+=1
            button1.isEnabled = false
            button1.backgroundColor = .none
            check()
            
            
        case button2:
            y += [label2.text!]
            equal += [button2]
            x+=1
            button2.isEnabled = false
            button2.backgroundColor = .none
            check()
            
        case button3:
          
            y += [label3.text!]
            equal += [button3]
            x+=1
            button3.isEnabled = false
            button3.backgroundColor = .none
            check()
            
        case button4:
            y += [label4.text!]
            equal += [button4]
            x+=1
            button4.isEnabled = false
            button4.backgroundColor = .none
            check()
            
        case button5:
            y += [label5.text!]
            equal += [button5]
            x+=1
            button5.isEnabled = false
            button5.backgroundColor = .none
            check()
            
        case button6:
            y += [label6.text!]
            equal += [button6]
            x+=1
            button6.isEnabled = false
            button6.backgroundColor = .none
            check()
            
        case button7:
            y += [label7.text!]
            equal += [button7]
            x+=1
            button7.isEnabled = false
            button7.backgroundColor = .none
            check()
            
        case button8:
            y += [label8.text!]
            equal += [button8]
            x+=1
            button8.backgroundColor = .none
            button8.isEnabled = false
            check()
            
        case button9:
            y += [label9.text!]
            equal += [button9]
            x+=1
            button9.isEnabled = false
            button9.backgroundColor = .none
            check()
            
        default:
            print("Unknown")
            return
        }
    }
  
    override func viewDidLoad() {
        super.viewDidLoad()
        resultLabel.text = ""
        element()
    }
    
    //—Ñ—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è —è—á–µ–π–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Ä–∞–≤–Ω—ã
    func close() {
        timer = Timer.scheduledTimer(timeInterval: 0.3, target: self, selector: #selector(fireTimer), userInfo:  nil, repeats: true)
    }
    //—Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ —è—á–µ–π–∫–∏, –ø—Ä–∏ –∏—Ö —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ
    func open() {
      
        equal[0].isEnabled = false
        equal[1].isEnabled = false
        equal[2].isEnabled = false
        
        result += y
        if result.count == 9 {
            resultLabel.text = "Congratulations!"
        }
        sec = sec + 0.3
        x = 0
        y.removeAll()
        equal.removeAll()
        print(y)
    }
    @objc func fireTimer() {
        sec -= 0.3
        equal[0].backgroundColor = .darkGray
        equal[1].backgroundColor = .darkGray
        equal[2].backgroundColor = .darkGray
        
        equal[0].isEnabled = true
        equal[1].isEnabled = true
        equal[2].isEnabled = true
        
        y.removeAll()
        equal.removeAll()
        timer.invalidate()
    }
    
    //—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    func check() {
        print(y)
        print(result)
       
        if x % 3 == 0 {
            print("Complete!")
            
            switch y {
                case ["üü•", "üü•", "üü•"]: open()
                case ["üü¶", "üü¶", "üü¶"]: open()
                case ["üü©", "üü©", "üü©"]: open()
                default:
                    x = 0
                    close()
        }
    }
}
    
    
    
    //–º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤(–∫–∞—Ä—Ç–∏–Ω–æ–∫)
     let r =  ["üü•", "üü¶", "üü©", "üü•", "üü¶", "üü©", "üü•", "üü¶", "üü©"].shuffled()
    //–º–∞—Å—Å–∏–≤ –≥–æ—Ç–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
    var result: [String] = []
     
    //—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –ª—ç–π–±–ª–∞–º –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤(–∫–∞—Ä—Ç–∏–Ω–æ–∫)
    func element(){
        label1.text = r[0]
        label2.text = r[1]
        label3.text = r[2]
        
        label4.text = r[3]
        label5.text = r[4]
        label6.text = r[5]
        
        label7.text = r[6]
        label8.text = r[7]
        label9.text = r[8]
    }
}
